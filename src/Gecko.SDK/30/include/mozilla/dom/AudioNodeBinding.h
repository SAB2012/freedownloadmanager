/* THIS FILE IS AUTOGENERATED - DO NOT EDIT */

#ifndef mozilla_dom_AudioNodeBinding_h__
#define mozilla_dom_AudioNodeBinding_h__

#include "js/RootingAPI.h"
#include "jspubtd.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/Nullable.h"

namespace mozilla {
namespace dom {

class AudioNode;
class NativePropertyHooks;
class ProtoAndIfaceArray;

} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {


MOZ_BEGIN_ENUM_CLASS(ChannelCountMode, uint32_t)
  Max,
  Clamped_max,
  Explicit
MOZ_END_ENUM_CLASS(ChannelCountMode)

namespace ChannelCountModeValues {
extern const EnumEntry strings[4];
} // namespace ChannelCountModeValues



MOZ_BEGIN_ENUM_CLASS(ChannelInterpretation, uint32_t)
  Speakers,
  Discrete
MOZ_END_ENUM_CLASS(ChannelInterpretation)

namespace ChannelInterpretationValues {
extern const EnumEntry strings[3];
} // namespace ChannelInterpretationValues


namespace AudioNodeBinding {

  typedef mozilla::dom::AudioNode NativeType;

  // We declare this as an array so that retrieving a pointer to this
  // binding's property hooks only requires compile/link-time resolvable
  // address arithmetic.  Declaring it as a pointer instead would require
  // doing a run-time load to fetch a pointer to this binding's property
  // hooks.  And then structures which embedded a pointer to this structure
  // would require a run-time load for proper initialization, which would
  // then induce static constructors.  Lots of static constructors.
  extern const NativePropertyHooks sNativePropertyHooks[];
  JSObject*
  DefineDOMInterface(JSContext* aCx, JS::Handle<JSObject*> aGlobal, JS::Handle<jsid> id, bool aDefineOnGlobal);

  void
  CreateInterfaceObjects(JSContext* aCx, JS::Handle<JSObject*> aGlobal, ProtoAndIfaceArray& aProtoAndIfaceArray, bool aDefineOnGlobal);

  JS::Handle<JSObject*>
  GetProtoObject(JSContext* aCx, JS::Handle<JSObject*> aGlobal);

  JS::Handle<JSObject*>
  GetConstructorObject(JSContext* aCx, JS::Handle<JSObject*> aGlobal, bool aDefineOnGlobal = true);

} // namespace AudioNodeBinding



} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_AudioNodeBinding_h__
